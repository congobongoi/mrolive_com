from django import forms


class Sales(forms.Form):
    pn = forms.CharField(required=False,max_length=25,widget=forms.TextInput(attrs={'placeholder': '8...','id':'pn'}))
    so_number = forms.CharField(required=False,max_length=50,widget=forms.TextInput(attrs={'placeholder': '100027...','id':'so_number'}))
    due_date = forms.DateField(required=False,widget=forms.DateInput(attrs={'placeholder': '02/23/2020','id':'due_date'}))
    customer = forms.CharField(required=False,max_length=50,widget=forms.TextInput(attrs={'placeholder': 'Bonaero Engineering...','id':'customer'}))
    salesperson = forms.CharField(required=False,max_length=20,widget=forms.TextInput(attrs={'placeholder': 'GGREEN...','id':'salesperson'}))
    
class WODashboardForm(forms.Form):
    file = forms.FileField(label='Upload Job Card')
    loc_whs_file = forms.FileField(label='Upload File to Import') 
    email = forms.CharField(required=False,max_length=50,widget=forms.TextInput(attrs={'id':'email'}))
    receiver_instr = forms.CharField(required=False,max_length=200,widget=forms.TextInput(attrs={'id':'receiver_instr'}))
    username = forms.CharField(required=False,max_length=50,widget=forms.TextInput(attrs={'id':'username'}))
    last_name = forms.CharField(required=False,max_length=50,widget=forms.TextInput(attrs={'id':'last_name'}))
    first_name = forms.CharField(required=False,max_length=50,widget=forms.TextInput(attrs={'id':'first_name'}))
    printer_name = forms.CharField(required=False,max_length=50,widget=forms.TextInput(attrs={'id':'printer_name'}))
    computer_name = forms.CharField(required=False,max_length=50,widget=forms.TextInput(attrs={'id':'computer_name'}))
    auth_key = forms.CharField(required=False,max_length=100,widget=forms.TextInput(attrs={'id':'auth_key'}))
    password_reentry = forms.CharField(required=False,max_length=50,widget=forms.PasswordInput(attrs={'id':'password_reentry'}))
    password = forms.CharField(required=False,max_length=50,widget=forms.PasswordInput(attrs={'id':'password'}))
    spn_code = forms.CharField(required=False,max_length=200,widget=forms.TextInput(attrs={'id':'spn_code'}))
    socondition_code = forms.CharField(required=False,max_length=50,widget=forms.TextInput(attrs={'id':'socondition_code'}))
    so_number = forms.CharField(required=False,max_length=50,widget=forms.TextInput(attrs={'id':'so_number'}))
    description = forms.CharField(required=False,max_length=25,widget=forms.TextInput(attrs={'placeholder': 'AZ04 Coupling...','id':'description'}))
    header_notes = forms.CharField(required=False,max_length=2000,widget=forms.Textarea(attrs={'id':'header_notes'}))
    notes = forms.CharField(required=False,max_length=2000,widget=forms.Textarea(attrs={'id':'notes'}))
    split_notes = forms.CharField(required=False,max_length=50,widget=forms.TextInput(attrs={'id':'split_notes'}))
    split_misc_cost = forms.CharField(required=False,max_length=50,widget=forms.TextInput(attrs={'placeholder': '$1095.87...','id':'split_misc_cost'}))
    split_parts_cost = forms.CharField(required=False,max_length=50,widget=forms.TextInput(attrs={'placeholder': '$27,789...','id':'split_parts_cost'}))
    split_labor_cost = forms.CharField(required=False,max_length=50,widget=forms.TextInput(attrs={'placeholder': '$128,900...','id':'split_labor_cost'}))
    split_approved = forms.DateField(required=False,widget=forms.DateInput(attrs={'id':'split_approved'}))
    split_quoted = forms.DateField(required=False,widget=forms.DateInput(attrs={'id':'split_quoted'}))
    split_next_dlv_date = forms.DateField(required=False,widget=forms.DateInput(attrs={'id':'split_next_dlv_date'}))
    split_arrival_date = forms.DateField(required=False,widget=forms.DateInput(attrs={'id':'split_arrival_date'}))
    serial_number = forms.CharField(required=False,max_length=25,widget=forms.TextInput(attrs={'placeholder': '612754389..','id':'serial_number'}))
    airway_bill = forms.CharField(required=False,max_length=25,widget=forms.TextInput(attrs={'placeholder': 'AB137802...','id':'airway_bill'}))
    pnm_modify = forms.CharField(required=False,max_length=25,widget=forms.TextInput(attrs={'placeholder': '8...','id':'pnm_modify'}))
    ro_number = forms.CharField(required=False,max_length=50,widget=forms.TextInput(attrs={'placeholder': '10002...','id':'ro_number'}))
    wo_number = forms.CharField(required=False,max_length=50,widget=forms.TextInput(attrs={'placeholder': '10007...','id':'wo_number','value':''}))
    po_number = forms.CharField(required=False,max_length=50,widget=forms.TextInput(attrs={'placeholder': '10010...','id':'po_number','value':''}))
    date_from = forms.DateTimeField(required=False,widget=forms.DateTimeInput(attrs={'id':'date_from'}))
    date_to = forms.DateTimeField(required=False,widget=forms.DateTimeInput(attrs={'id':'date_to'}))
    due_date = forms.DateField(required=False,widget=forms.DateInput(attrs={'placeholder': '02/23/2020','id':'due_date'}))
    get_due_date = forms.DateField(required=False,widget=forms.DateInput(attrs={'placeholder': '02/23/2020','id':'get_due_date'}))
    location = forms.CharField(required=False,max_length=25,widget=forms.TextInput(attrs={'placeholder': 'WIP...','id':'location'}))
    warehouse = forms.CharField(required=False,max_length=25,widget=forms.TextInput(attrs={'placeholder': 'CA07...','id':'warehouse'}))
    customer = forms.CharField(required=False,max_length=50,widget=forms.TextInput(attrs={'placeholder': 'Bonaero Engineering...','id':'customer'}))
    manager = forms.CharField(required=False,max_length=20,widget=forms.TextInput(attrs={'placeholder': 'GGREEN...','id':'manager'}))
    get_manager = forms.CharField(required=False,max_length=20,widget=forms.TextInput(attrs={'placeholder': 'KBURRELL...','id':'get_manager'}))
    rank = forms.CharField(required=False,max_length=20,widget=forms.TextInput(attrs={'placeholder': '15...','id':'rank'}))
    rack = forms.CharField(required=False,max_length=50,widget=forms.TextInput(attrs={'placeholder': 'CART 07...','id':'rack'}))
    user_id = forms.CharField(required=False,widget=forms.PasswordInput(attrs={'id':'user_id'},render_value=True))
    user_code = forms.CharField(required=False,max_length=100,widget=forms.TextInput(attrs={'placeholder': 'JOEPASS...','id':'user_code'}))
    status = forms.ChoiceField(required=False,choices = (('success','Success'),('failure','Failure'),('both','Either')),widget=forms.TextInput(attrs={'id':'aud_status'}))
    wo_task = forms.CharField(required=False,max_length=100,widget=forms.TextInput(attrs={'placeholder': '26789S...','id':'wo_task'}))
    quantity = forms.FloatField(required=False,widget=forms.TextInput(attrs={'placeholder': '77','id':'quantity'}))
    label = forms.CharField(required=False,max_length=50,widget=forms.TextInput(attrs={'placeholder': '012345600000011...','id':'label','value':''}))
    from_num = forms.FloatField(required=False,widget=forms.TextInput(attrs={'placeholder': '77...','id':'from_num'}))
    to_num = forms.FloatField(required=False,widget=forms.TextInput(attrs={'placeholder': '127...','id':'to_num'}))
    condition_code = forms.CharField(required=False,max_length=50,widget=forms.TextInput(attrs={'placeholder': '32...','id':'condition_code'}))
    vendor = forms.CharField(required=False,max_length=50,widget=forms.TextInput(attrs={'placeholder': 'Bonaero Engineering...','id':'vendor'}))
    entry_date = forms.DateField(required=False,widget=forms.DateInput(attrs={'placeholder': '09/24/2020','id':'entry_date'}))
    part_number = forms.CharField(required=False,max_length=50,widget=forms.TextInput(attrs={'placeholder': '1NGK56XCT...','id':'part_number'})) 
    misc_cost = forms.CharField(required=False,max_length=50,widget=forms.TextInput(attrs={'placeholder': '$1095.87...','id':'misc_cost'}))
    parts_cost = forms.CharField(required=False,max_length=50,widget=forms.TextInput(attrs={'placeholder': '$27,789...','id':'parts_cost'}))
    labor_cost = forms.CharField(required=False,max_length=50,widget=forms.TextInput(attrs={'placeholder': '$128,900...','id':'labor_cost'}))
    approved = forms.DateField(required=False,widget=forms.DateInput(attrs={'id':'approved'}))
    quoted = forms.DateField(required=False,widget=forms.DateInput(attrs={'id':'quoted'}))
    next_dlv_date = forms.DateField(required=False,widget=forms.DateInput(attrs={'id':'next_dlv_date'}))
    arrival_date = forms.DateField(required=False,widget=forms.DateInput(attrs={'id':'arrival_date'}))
    override = forms.CharField(required=False,max_length=1000,widget=forms.Textarea(attrs={'placeholder': 'INSPECTED UNIT AS PER TECHNICAL DATA. NO DEFECTS FOUND','id':'override'}))
    sequence = forms.CharField(required=False,max_length=100,widget=forms.TextInput(attrs={'placeholder': '2...','id':'sequence'}))
    priority = forms.CharField(required=False,max_length=100,widget=forms.TextInput(attrs={'placeholder': '2...','id':'priority'}))
    account_company = forms.CharField(required=False,max_length=25,widget=forms.TextInput(attrs={'placeholder': 'ABC Corp...','id':'acc_co'}))
    consignment = forms.CharField(required=False,max_length=25,widget=forms.TextInput(attrs={'placeholder': 'General...','id':'consignment'}))
    department = forms.CharField(required=False,max_length=50,widget=forms.TextInput(attrs={'placeholder': 'Quality Control...','id':'dept_input'}))
    att_val = forms.CharField(required=False,max_length=25,widget=forms.TextInput(attrs={'placeholder': 'Inspect before cleaning...','id':'att_val'}))
    total_hours = forms.CharField(required=False,max_length=25,widget=forms.TextInput(attrs={'readonly':1,'placeholder': '8.9','id':'total_hours'}))        
    
    def clean(self):
        cleaned_data = super().clean()
        wo_number = cleaned_data.get("wo_number")
        date_from = cleaned_data.get("date_from")
        date_to = cleaned_data.get("date_to")
        due_date = cleaned_data.get("due_date")
        get_due_date = cleaned_data.get("get_due_date")
        location = cleaned_data.get("location")
        warehouse = cleaned_data.get("warehouse")
        customer = cleaned_data.get("customer")
        manager = cleaned_data.get("manager")
        get_manager = cleaned_data.get("get_manager")
        rank = cleaned_data.get("rank")
        rack = cleaned_data.get("rack")
        user_id = cleaned_data.get("user_id")
        
    def save(self):
        data = self.cleaned_data
        wo_number = ''
    
class PIUpdateForm(forms.Form):
    stock_label = forms.CharField(required=False,max_length=50,widget=forms.TextInput(attrs={'placeholder': '100930000001...','id':'stock_label','value':''}))
    quantity = forms.FloatField(required=False,widget=forms.TextInput(attrs={'placeholder': '77...','id':'no_quantity'}))
    batch_no = forms.CharField(required=False,max_length=50,widget=forms.TextInput(attrs={'placeholder': '30002...','id':'batch_no'}))
    user_id = forms.CharField(required=False,widget=forms.PasswordInput(attrs={'id':'user_id'},render_value=True))
    location = forms.CharField(required=False,max_length=25,widget=forms.TextInput(attrs={'placeholder': 'WIP...','id':'location'}))
    
    def clean(self):
        cleaned_data = super().clean()
        stock_label = cleaned_data.get("stock_label")
        quantity = cleaned_data.get("quantity")
        batch_no = cleaned_data.get("batch_no")
        user_id = cleaned_data.get("user_id")   
        
    def save(self):
        data = self.cleaned_data